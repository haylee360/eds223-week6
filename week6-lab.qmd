---
title: "Week 6 lab"
format: html
editor: visual
execute:
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---

## 1. Setup

```{r}
library(sf) # vector handling
library(terra) # raster handling
library(tidyverse)
library(tmap) # map making
library(spData) # spatial data
library(spDataLarge) # spatial data
```

# Raster-Vector interactions

## 2. Rasterization
```{r}
# load Zion park boundary (vector object to rasterize)
boundary <- read_sf(system.file("vector/zion.gpkg", package = "spDataLarge")) 

# load elevation raster to use as template raster object
elevation <- rast(system.file("raster/srtm.tif", package = "spDataLarge"))

# check and transform coordinate reference systems
if(crs(elevation) == crs(boundary)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  boundary <- st_transform(boundary, st_crs(elevation))
}
```

```{r}
if(sf::st_geometry_type(boundary) == "POLYGON"){
  print("polygon data")
} else {
  print("not polygon data")
}
```

Compare between polygon object and line object
```{r}
# update park boundary object name to clarify that it's a polygon
park_polygon <- boundary

# create line version park boundary
park_border <- boundary %>%
  sf::st_cast(., "MULTILINESTRING")
```

Rasterize
```{r}
polygon_raster <- terra::rasterize(park_polygon, elevation) # elevation is the template
border_raster <- terra::rasterize(park_border, elevation)
```
Just using the geometries from elevation (the grid cells), not using the values in elevation
```{r}
map1 <- tm_shape(polygon_raster) +
  tm_raster() +
  tm_layout(main.title = "rasterized polygon")

map2 <- tm_shape(border_raster) +
  tm_raster() +
  tm_layout(main.title = "rasterized line")

tmap_arrange(map1, map2, nrow = 1)
```

```{r}
# create low spatial resolution template raster
template_raster_low <- terra::rast(ext(park_polygon), resolution = 0.05,
                        crs = st_crs(park_polygon))

# create high spatial resolution template raster
template_raster_high <- terra::rast(ext(park_polygon), resolution = 0.01,
                        crs = st_crs(park_polygon))

# rasterize to low resolution template raster
polygon_raster_low <- terra::rasterize(park_polygon, template_raster_low)

# rasterize to high resolution template raster
polygon_raster_high <- terra::rasterize(park_polygon, template_raster_high)
```

```{r}
map1 <- tm_shape(polygon_raster_low) +
  tm_raster() +
  tm_layout(main.title = "low resolution")

map2 <- tm_shape(polygon_raster_high) +
  tm_raster() +
  tm_layout(main.title = "high resolution")

tmap_arrange(map1, map2, nrow = 1)
```

